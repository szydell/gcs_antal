name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          check-latest: true
          
      - name: Run tests
        run: go test -v ./...
        
      - name: Run go vet
        run: go vet ./...

  build:
    name: Build binaries
    runs-on: ubuntu-latest
    needs: [unit-tests]
    strategy:
      matrix:
        arch: [amd64, arm64]
      fail-fast: false  # Continue with other arch if one fails
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          
      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION="v0.0.0-build.${{ github.run_number }}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Build binary
        env:
          GOOS: linux
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags "-X main.version=${{ env.VERSION }}" -o antal-linux-${{ matrix.arch }} .
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: antal-linux-${{ matrix.arch }}
          path: antal-linux-${{ matrix.arch }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: List artifacts
        run: ls -la */
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: GCS Antal ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            antal-linux-amd64/antal-linux-amd64
            antal-linux-arm64/antal-linux-arm64